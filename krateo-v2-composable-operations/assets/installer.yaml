apiVersion: v1
data:
  INSTALLER_DEBUG: "true"
  INSTALLER_NAMESPACE: krateo-system
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: installer
    app.kubernetes.io/name: installer
  name: installer
  namespace: krateo-system
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: installer
    app.kubernetes.io/name: installer
  name: installer
  namespace: krateo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: installer
    app.kubernetes.io/name: installer
  name: installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: installer
subjects:
- kind: ServiceAccount
  name: installer
  namespace: krateo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: installer
    app.kubernetes.io/name: installer
  name: installer
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - '*'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: installer
  namespace: krateo-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: installer
      app.kubernetes.io/name: installer
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: installer
        app.kubernetes.io/name: installer
        app.kubernetes.io/version: 0.5.7
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: installer
        image: ghcr.io/krateoplatformops/installer:0.5.7
        imagePullPolicy: IfNotPresent
        name: installer
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: installer
      serviceAccountName: installer
      terminationGracePeriodSeconds: 30
